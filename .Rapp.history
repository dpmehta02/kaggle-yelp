library(randomForest)
temp_rf <- randomForest(votes_useful~., data=temp, mtry=3, importance=TRUE, na.action=na.omit)
temp_rf
temp = head(data, 1000)
temp_rf <- randomForest(votes_useful~., data=temp, mtry=3, importance=TRUE, na.action=na.omit)
temp_rf
temp = head(data, 10000)
temp_rf <- randomForest(votes_useful~., data=temp, mtry=3, importance=TRUE, na.action=na.omit)
temp_rf
?randomForest
print(temp_rf)
predicted(temp_rf)
rsq(temp_rf)
getTree(temp_rf)
importance(temp_rf)
?IncNodePurity
?importance
ntree(temp_rf)
corr.bias(temp_rf)
type(temp_rf)
predicted(temp_rf)
temp_rf.predicted
print temp_rf
print(temp_rf)
round(importance(temp_rf), 3)
varImpPlot(temp_rf)
?varImpPlot
?IncMSE
??IncMSE
?IncNodePurity
model = lm(votes_useful~u_avg_votes_useful)
summary(model)
model = lm(votes_useful~u_avg_votes_useful + u_review_count)
summary(model)
options(scipen=100)
options(dec=2)
summary(model)
plot(votes_useful,u_avg_votes_useful)
plot(votes_useful,u_review_count)
plot(votes_useful,u_avg_votes_useful, ylim=12)
plot(votes_useful,u_avg_votes_useful, ylim=c(0,12))
plot(votes_useful,u_avg_votes_useful, ylim=c(0,20), xlim=c(0,20))
plot(votes_useful,u_review_count, ylim=c(0,20), xlim=c(0,20))
summary(model)
model = lm(votes_useful~u_avg_votes_useful)
summary(model)
summary(model)
attach(data)
summary(data)
sample_data = sample(data, size = 20000)
sample_data = sample(data, size = 2000)
sample_data = sample(data, size = 200)
sample_data = sample(data, size = 20)
sample_data = sample(data, size = 2)
summary(sample_data)
sample_data = sample(data)
summary(sample_data)
cor(data[,c(1,2,3,4,5)])
cor(data[,c(1,2,3,4,5)], use="pairwise")
cor(data[r(1:10),c(1,2,3,4,5)], use="pairwise")
cor(data[1:10,c(1,2,3,4,5)], use="pairwise")
cor(data[1:1,c(1,2,3,4,5)], use="pairwise")
cor(data[1:2,c(1,2,3,4,5)], use="pairwise")
cor(data[1:3,c(1,2,3,4,5)], use="pairwise")
cor(data[1:200000,c(1,2,3,4,5)], use="pairwise")
cor(data[1:10000,c(1,2,3,4,5)], use="pairwise")
cor(data[,c(1,2,3,4,5)], use="pairwise")
pairs(data[1:10000,c(1,2,3,4,5)])
pairs(data[1:10000,c(1,2,3,4,5,6)])
head(data)
cor(data[,c(1,2,3,4,5,7,8,9,10,11,12)], use="pairwise")
data[,6]
data[,6] <- sapply(data[,6],switch,"yes"=1, "no"=0)
summary(data)
cor(data[,c(1,2,3,4,5,6,7,8,9,10,11,12)], use="pairwise")
model(votes_useful~data)
modelv1=lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful)
summary(model)
summary(modelv1)
options(scipen=999)
summary(modelv1)
predict(lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful))
data['modelv1_prediction'] = predict(lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful))
data['modelv1_prediction'] = predict(lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful), pariwise)
data['modelv1_prediction'] = predict(lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful), include="pariwise")
data['modelv1_prediction'] = predict(lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful))
prediction = predict(lm(votes_useful~r_days_active+r_length+r_exclamations+u_review_count+u_avg_votes_useful))
summary(prediction)
plot(votes_useful~prediction, data=data)
plot?
help(plot)
abline(modelv1)
cor(prediction, votes_useful)
head(prediction)
head(data)
prediction
head(prediction)
prediction[1:100]
cor(prediction~data$votes_useful, use = "pairwise")
cor(prediction, data$votes_useful, use = "pairwise")
cor(prediction, votes_useful, use = "pairwise")
summary(model)
summary(modelv1)
cor(prediction, data, use="pairwise")
predict(modelv1, data, interval="predict")
summary(model, cor=T)
summary(modelv1, cor=T)
ls()
modelv1
data
summary(data)
data1 <- read.csv("~/Kaggle/yelp/data/data.csv")
data2 <- read.csv("~/Kaggle/yelp/yelp_training_set/yelp_training_set_review.csv")
summary(data)
summary(data1)
summary(data2)
data1['text'] <- data2['text']
summary(data1)
head(data1)
data1[20:30]
attach(data1)
summary(data1)
summary(data1)
data <- data1
ls()
summary(data)
data(1:20)
cor(votes_useful,b_review_count, use="pairwise")
cor(votes_useful,u_avg_votes_useful, use="pairwise")
model <- lm(votes_useful ~ u_avg_votes_useful)
summary(model)
ls()
ls
ls()
summary(model, cor=T)
summary(data, cor=T)
model <- lm(votes_useful ~ u_avg_votes_useful + r_length)
summary(model)
summary(model, cor=T)
cor(votes_useful, r_length, use="pairwise")
summary(model)
help(prediction)
help(predict)
anova(model)
prediction <- predict(model, newdata=data)
summary(prediction)
write.csv(prediction, "test_prediction.csv")
summary(r_length)
summary(u_avg_votes_useful)
prediction <- predict(model, newdata=data, use="pairwise")
summary(prediction)
write.csv(prediction, "/Kaggle/yelp/test_prediction.csv")
write.csv(prediction, "Users/devmehta/Kaggle/yelp/test_prediction.csv")
write.csv(prediction, votes_useful, "prediction.csv")
write.csv((prediction, votes_useful), "prediction.csv")
cor(prediction, votes_useful, use = "pairwise")
summary(model)
model1 <- lm(votes_useful ~ u_avg_votes_useful)
prediction2 <- predict(model1)
summary(prediction2)
anova(prediction1, prediction2)
anova(prediction, prediction2)
cor(prediction, prediction2, votes_useful, use="pairwise")
cor(prediction2, votes_useful, use="pairwise")
prediction2 <- predict(model1, newdata = data)
cor(prediction2, votes_useful, use="pairwise")
ls()
ls()
summary(model)
counts <- table(votes_useful)
counts
tabulate(votes_useful)
95000/220000
65000/220000
31000/220000
15000/220000
95370/220000
test_data <- read.csv("~/Kaggle/yelp/data/test_data.csv")
test_data <- read.csv("~/Kaggle/yelp/data/test_data.csv")
summary(data)
votes_useful_data <- read.csv("~/Kaggle/yelp/yelp_training_set/yelp_training_set_user.csv")
head(votes_useful_data)
merge(x = test_data, y = votes_useful_data, by = "user_id", all.x = TRUE)
testdata <- merge(x = test_data, y = votes_useful_data, by = "user_id", all.x = TRUE)
summary(testdata)
testdata <- subset(testdata, select = -c(u_avg_votes_useful.x))
summary(testdata)
ls()
median(u_avg_votes_useful)
median(u_avg_votes_useful.y)
median(u_avg_votes_useful, na.rm=TRUE)
mean(u_avg_votes_useful, na.rm=TRUE)
head(testdata)
testdata
median(u_avg_votes_useful, na.rm=TRUE)
median(data$u_avg_votes_useful, na.rm=TRUE)
median(testdata$u_avg_votes_useful, na.rm=TRUE)
?replace
testdata[testdata$u_avg_votes_useful == NA] <- 1.233564
testdata[is.na(testdata$u_avg_votes_useful)] <- 1.233564
testdata[is.na(testdata$u_avg_votes_useful.y)] <- 1.233564
testdata[is.na(u_avg_votes_useful.y)] <- 1.233564
testdata[is.na(u_avg_votes_useful)] <- 1.233564
duplicated(testdata)
head(testdata)
attach(testdata)
median(testdata$u_avg_votes_useful, na.rm=TRUE)
median(data$u_avg_votes_useful, na.rm=TRUE)
testdata$u_avg_votes_useful[is.na(testdata$u_avg_votes_useful.y)] <- 1.233564
head(testdata)
summary(testdata)
prediction
summary(prediction)
ls()
summary(model)
test_prediction <- predict(model, newdata=testdata)
write.csv(testdata, "temp.csv")
library()
require(plyr)
rename(testdata, c("length"-"r_length"))
rename(testdata, c("length"="r_length"))
summary(testdata)
head(testdata)
names(testdata)[names(testdata)=="length"] <- "r_length"
summary(testdata)
test_prediction <- predict(model, newdata=testdata)
summary(test_prediction)
testdata['prediction'] <- predict(model, newdata=testdata)
summary(testdata)
x <- c(1,2)
x
x <- (testdata, c(1,2))
x <- (c(1,2))
x
summary(x)
remove(x)
ls()
write.csv(test_prediction, "testPrediction.csv")
95000/220000
65000/220000
15000/220000
31000/220000
95370/220000
quantile(testdata, c(.1, .2))
quantile(testdata$prediction, c(.1, .2))
.4318182
.4318182 + .2954545
.4318182 + .2954545 + .1409091
.4318182 + .2954545 + .1409091 + .06818182
quantile(testdata$prediction, c(0.4318182, 0.7272727, 0.8681818, 0.9363636))
